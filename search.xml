<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>常用工具集</title>
      <link href="/2018/11/17/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
      <url>/2018/11/17/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><p>平时在学习中经常用到的方便快捷的小工具，总结一下并附上简单说明和下载链接。</p><a id="more"></a><hr><h2 id="常用工具-1"><a href="#常用工具-1" class="headerlink" title="常用工具"></a>常用工具</h2><p>平时在学习中经常用到的方便快捷的小工具，总结一下并附上简单说明和下载链接。</p><h3 id="terminus"><a href="#terminus" class="headerlink" title="terminus"></a>terminus</h3><ul><li>一款非常好用的远程连接工具。目前支持的windows、Android、ios、linux。<br><a href="https://www.termius.com/" target="_blank" rel="noopener">下载链接</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>测试工具Junit</title>
      <link href="/2018/11/04/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7Junit/"/>
      <url>/2018/11/04/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7Junit/</url>
      
        <content type="html"><![CDATA[<h1 id="Junit使用"><a href="#Junit使用" class="headerlink" title="Junit使用"></a>Junit使用</h1><a id="more"></a><hr><h2 id="Junit-简介"><a href="#Junit-简介" class="headerlink" title="Junit 简介"></a>Junit 简介</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>JUnit是一个Java语言的单元测试框架。它由Kent Beck和Erich Gamma建立，逐渐成为源于Kent Beck的sUnit的xUnit家族中最为成功的一个JUnit有它自己的JUnit扩展生态圈。多数Java的开发环境都已经集成了JUnit作为单元测试的工具。</li></ul><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>JUnit是用于编写和运行测试的开源框架。</li><li>提供了注释，以确定测试方法。</li><li>提供断言测试预期结果。</li><li>提供了测试运行的运行测试。</li><li>JUnit测试让您可以更快地编写代码，提高质量 JUnit是优雅简洁。</li><li>它是不那么复杂以及不需要花费太多的时间。</li><li>JUnit测试可以自动运行，检查自己的结果，并提供即时反馈。没有必要通过测试结果报告来手动梳理。</li><li>JUnit测试可以组织成测试套件包含测试案例，甚至其他测试套件。</li><li>Junit显示测试进度的，如果测试是没有问题条形是绿色的，测试失败则会变成红色。</li></ul><h2 id="Junit-安装使用"><a href="#Junit-安装使用" class="headerlink" title="Junit 安装使用"></a>Junit 安装使用</h2><ol><li>笔者使用的是<strong>Intellij IDEA</strong>编辑器，该软件在安装时已经默认配置了Junit单元测试插件，读者可以尝试在<strong>“File-&gt;Settings-&gt;Plugins”</strong>下搜索JUnit，如果没有请自行安装。安装好应用后重启编辑器即可。</li><li>在工程目录下创建test目录用于存放测试类，在此目录上右击鼠标并将此目录标记为Test Resources Root。</li><li>选择需要测试的类文件，右键点击选择<strong>go to -&gt;test</strong>,然后点击create new test <img src="/2018/11/04/测试工具Junit/Junit_1.jpg" alt=""></li><li>选择必要的选项，然后选择需要测试的方法，添加完成后即可生成测试方法。<img src="/2018/11/04/测试工具Junit/Junit_2.png" alt=""></li><li>在测试方法中添加具体的实现内容后，即可执行相应的测试内容。<img src="/2018/11/04/测试工具Junit/Junit_3.png" alt=""></li></ol><h3 id="常用的注解"><a href="#常用的注解" class="headerlink" title="常用的注解"></a>常用的注解</h3><ol><li>@Test: 测试方法<br>　　　　a)(expected=XXException.class)如果程序的异常和XXException.class一样，则测试通过<br>　　　　b)(timeout=100)如果程序的执行能在100毫秒之内完成，则测试通过</li><li>@Ignore: 被忽略的测试方法：加上之后，暂时不运行此段代码</li><li>@Before: 每一个测试方法之前运行</li><li>@After: 每一个测试方法之后运行</li><li>@BeforeClass: 方法必须必须要是静态方法（static 声明），所有测试开始之前运行，注意区分before，是所有测试方法</li><li>@AfterClass: 方法必须要是静态方法（static 声明），所有测试结束之后运行，注意区分 @After</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
